events {
    worker_connections  1024;
}

http {
# the upstream component nginx needs to connect to
    #upstream django {
     #   server unix:/mice/uwsgi.sock; # for a file socket
        # server 0.0.0.0:8001; # for a web port socket (we'll use this first)
    #}

    # configuration of the server
    server {
        listen 443;
        server_name 1024cx.top;
        ssl on;
        root html;
        index index.html index.htm;
        ssl_certificate   /root/cert/4444835_www.1024cx.top.pem;
        ssl_certificate_key  /root/cert/4444835_www.1024cx.top.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        location / {
            proxy_pass http://172.16.218.30:31000;
        }
	    location /api/ {
            proxy_pass http://172.16.218.30:31002/; // 将 /api/ 转发到 / 的配置方法，注意这个 / 编写的细节
        }
        error_log    /logs/error_www.1024cx.top.log    error;
    }
    server {
        listen 443;
        server_name git.1024cx.top;
        ssl on;
        root html;
        index index.html index.htm;
        ssl_certificate   /root/cert/4444851_git.1024cx.top.pem;
        ssl_certificate_key  /root/cert/4444851_git.1024cx.top.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        location / {
            proxy_pass http://172.16.218.30:8929;
            proxy_buffering    off;
            proxy_buffer_size  4k;
            proxy_buffers 4  32k;
            proxy_busy_buffers_size  64k;
            proxy_temp_file_write_size 64k;
        }
    }
}
